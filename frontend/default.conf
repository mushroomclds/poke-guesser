# Nginx configuration file for serving the frontend of the pokeApp project.
# Handles static file serving, SPA routing, API proxying, security, and caching.

server {
    listen 80; # Listens on port 80 (HTTP) for both IPv4 and IPv6
    listen [::]:80;
    server_name _; # Responds to requests for the domain, only used for multiple domains 

    root /usr/share/nginx/html; # Root directory for serving files
    index index.html; # Default file to serve
    autoindex off; # Disable directory listing for security

    # Security Headers (Cloudflare may handle some of these, but nginx takes precedence)
    add_header X-Frame-Options "DENY"; # Prevents clickjacking
    add_header X-Content-Type-Options "nosniff" always;  # forces browser to respect declared content types, Stops execution of malicious scripts disguised as innocent file types
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CSP header (adjust based on your app's needs)
    # default-src 'self' Sets the default policy for all resource types not explicitly defined
    # script-src 'self' 'unsafe-inline' Allows scripts from the same origin and inline scripts
    # style-src 'self' 'unsafe-inline' Allows styles (CSS) from the same origin and inline styles
    # img-src 'self' data: https: Allows images from the same origin, data URIs, and HTTPS sources
    # font-src 'self' Allows fonts from the same origin
    ############ PROD
    add_header Content-Security-Policy "
        default-src 'self'; 
        script-src 'self'; 
        style-src 'self' 'STYLE_HASH_PLACEHOLDER' https://fonts.googleapis.com;
        img-src 'self' data: https:; 
        font-src 'self' data: https://fonts.gstatic.com; 
        connect-src 'self' https://api.pokemontcg.io https://mushroom-clouds.com; 
        object-src 'none'; 
        base-uri 'self';
    " always;
    ############# DEV
    # add_header Content-Security-Policy "
    # default-src 'self' http://localhost:*; 
    # script-src 'self' 'unsafe-eval' 'unsafe-inline' http://localhost:* ws://localhost:*;
    # style-src 'self' 'unsafe-inline' http://localhost:* https://fonts.googleapis.com;
    # img-src 'self' data: http://localhost:* https:;
    # font-src 'self' data: http://localhost:* https://fonts.gstatic.com;
    # connect-src 'self' 
    #     http://localhost:* 
    #     https://localhost:* 
    #     ws://localhost:*
    #     wss://localhost:*
    #     https://api.pokemontcg.io;
    # frame-src 'self' http://localhost:*;
    # object-src 'none';
    # base-uri 'self';
    # " always;
    
    
    # Trust Cloudflare's HSTS (they handle this better)
    # Don't add HSTS header here to avoid conflicts

    # below is not needed as cloudflare is setup as a reverse proxy
    # Cloudflare IP validation (optional but recommended)
    # Uncomment these lines to only accept traffic from Cloudflare 
    # set_real_ip_from 173.245.48.0/20;
    # set_real_ip_from 103.21.244.0/22;
    
    # Rate limiting
    # Applies the global rate limit with burst capacity of 5 requests
    # Returns HTTP 429 status when rate limit exceeded
    # nodelay means excess requests are rejected immediately
    limit_req zone=global_limit burst=5 nodelay;
    limit_req_status 429;

    # Hide nginx version 
    server_tokens off;

    # Client body size limit
    client_max_body_size 10M;

    # Get real visitor IP from Cloudflare
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;

    location / {

        ############ PROD
        Check if request is coming through/from Cloudflare
        if ($http_cf_ray = "") {
            return 403 "Direct access not allowed";
        }

        # Cache busting headers, Minimal but effective no-cache
        add_header Cache-Control "no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;  # Keep for IE compatibility
        
        # Your CSP header with the correct hash
        # add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'sha256-STYLE_HASH_PLACEHOLDER' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; script-src 'self'; img-src 'self' data:; connect-src 'self';" always;
        
        # Angular SPA fallback: tries requested file, then directory, then index.html
        try_files $uri $uri/ /index.html;
    }

    # Specific location blocks allowed + fall back to index.html for SPA routing.
    location ~ ^/(anime-page|another-page)/ {
        try_files $uri $uri/ /index.html;
    }

    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Optional: Add security headers for assets too
        add_header X-Content-Type-Options "nosniff";
        
        # Cloudflare will cache these automatically with their rules
        # But we can still set nginx cache headers
    }

    # API proxy with security
    location /api {
        # More restrictive rate limiting for API
        limit_req zone=api_limit burst=2 nodelay;
        
        # deny all;  # Block all external requests
        # # nginx and angular are on same container, so localhost 
        # allow 127.0.0.1;  # Allow requests from Nginx on the same machine
        proxy_ssl_server_name on; # Enable server name indication for SSL
        proxy_http_version 1.1; # Use HTTP/1.1 for proxying
        ############PROD 
        # Proxy to internal backend container app, adding / to end of URL will remove /api prefix
        proxy_pass https://poke-tcg-guesser-backend.internal.bluemoss-4b2887d7.centralus.azurecontainerapps.io; # Use azure internal backend hostname
        ############DEV
        ## proxy_pass http://127.0.0.1:5000 wont work as docker container has own IP 
        # proxy_pass http://host.docker.internal:5000;

        # Forward headers as needed
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;

        # Forward Cloudflare headers to backend
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $http_cf_connecting_ip;
        # proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
        # proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        # proxy_set_header CF-Ray $http_cf_ray;
        # proxy_set_header CF-Country $http_cf_ipcountry;
        
        # # Timeout settings
        # proxy_connect_timeout 5s;
        # proxy_send_timeout 10s;
        # proxy_read_timeout 10s;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Block sensitive files
    location ~* \.(txt|md|log|config|bak|zip|tar|gz|php|json|xml|yml|yaml|sql|env|git|gitmodules|ini|conf|old|orig|tmp|temp)$ {
        deny all;
        return 404;
    }

    # Block hidden files and directories
    location ~ /\. {
        deny all;
        return 404;
    }

    # Block common attack patterns
    location ~* (eval\(|base64_decode|gzip|\.php|wp-admin|wp-content) {
        deny all;
        return 404;
    }

    # Block requests with suspicious patterns and injection attempt
    if ($request_uri ~* "(\.\./|\.\.\\|file://|javascript:|data:)") {
        return 403;
    }

    # Optional: Block requests without Cloudflare headers (very strict)
    # if ($http_cf_ray = "") {
    #     return 444;
    # }
     
    access_log /var/log/nginx/access.log cloudflare;
    error_log /var/log/nginx/error.log warn;
}